From d5cf666f8002f323a05a2cfcd04d3bc464bfb663 Mon Sep 17 00:00:00 2001
From: Toshimichi0915 <main@toshimichi.net>
Date: Tue, 2 Aug 2022 07:52:42 +0900
Subject: [PATCH] Fix InvalidSlot crash exploit


diff --git a/src/main/java/net/minecraft/server/Container.java b/src/main/java/net/minecraft/server/Container.java
index 3a488ce20..081bc3e7d 100644
--- a/src/main/java/net/minecraft/server/Container.java
+++ b/src/main/java/net/minecraft/server/Container.java
@@ -107,10 +107,12 @@ public abstract class Container {
     }
 
     public Slot getSlot(int i) {
-        return (Slot) this.slots.get(i);
+        if (i < 0 || i >= this.slots.size()) return null;
+        else return (Slot) this.slots.get(i);
     }
 
     public ItemStack shiftClick(EntityHuman entityhuman, int i) {
+        if (i < 0 || i >= this.slots.size()) return null;
         Slot slot = (Slot) this.slots.get(i);
 
         return slot != null ? slot.getItem() : ItemStack.a;
@@ -243,6 +245,7 @@ public abstract class Container {
                         return ItemStack.a;
                     }
 
+                    if (i >= this.slots.size()) return ItemStack.a;
                     slot2 = (Slot) this.slots.get(i);
                     if (slot2 == null || !slot2.isAllowed(entityhuman)) {
                         return ItemStack.a;
@@ -256,6 +259,7 @@ public abstract class Container {
                         return ItemStack.a;
                     }
 
+                    if (i >= this.slots.size()) return ItemStack.a;
                     slot2 = (Slot) this.slots.get(i);
                     if (slot2 != null) {
                         itemstack2 = slot2.getItem();
@@ -331,6 +335,7 @@ public abstract class Container {
                     }
                 }
             } else if (inventoryclicktype == InventoryClickType.SWAP && j >= 0 && j < 9) {
+                if (i >= this.slots.size()) return ItemStack.a;
                 slot2 = (Slot) this.slots.get(i);
                 itemstack2 = playerinventory.getItem(j);
                 itemstack1 = slot2.getItem();
@@ -368,6 +373,7 @@ public abstract class Container {
                     }
                 }
             } else if (inventoryclicktype == InventoryClickType.CLONE && entityhuman.abilities.canInstantlyBuild && playerinventory.getCarried().isEmpty() && i >= 0) {
+                if (i >= this.slots.size()) return ItemStack.a;
                 slot2 = (Slot) this.slots.get(i);
                 if (slot2 != null && slot2.hasItem()) {
                     itemstack2 = slot2.getItem().cloneItemStack();
@@ -375,6 +381,8 @@ public abstract class Container {
                     playerinventory.setCarried(itemstack2);
                 }
             } else if (inventoryclicktype == InventoryClickType.THROW && playerinventory.getCarried().isEmpty() && i >= 0) {
+                if (i >= this.slots.size()) return ItemStack.a;
+
                 slot2 = (Slot) this.slots.get(i);
                 if (slot2 != null && slot2.hasItem() && slot2.isAllowed(entityhuman)) {
                     itemstack2 = slot2.a(j == 0 ? 1 : slot2.getItem().getCount());
@@ -382,6 +390,8 @@ public abstract class Container {
                     entityhuman.drop(itemstack2, true);
                 }
             } else if (inventoryclicktype == InventoryClickType.PICKUP_ALL && i >= 0) {
+                if (i >= this.slots.size()) return ItemStack.a;
+
                 slot2 = (Slot) this.slots.get(i);
                 itemstack2 = playerinventory.getCarried();
                 if (!itemstack2.isEmpty() && (slot2 == null || !slot2.hasItem() || !slot2.isAllowed(entityhuman))) {
@@ -390,6 +400,7 @@ public abstract class Container {
 
                     for (int l1 = 0; l1 < 2; ++l1) {
                         for (int i2 = l; i2 >= 0 && i2 < this.slots.size() && itemstack2.getCount() < itemstack2.getMaxStackSize(); i2 += k1) {
+                            if (i >= this.slots.size()) return ItemStack.a;
                             Slot slot3 = (Slot) this.slots.get(i2);
 
                             if (slot3.hasItem() && a(slot3, itemstack2, true) && slot3.isAllowed(entityhuman) && this.a(itemstack2, slot3)) {
@@ -492,6 +503,7 @@ public abstract class Container {
                     break;
                 }
 
+                if (i < 0 || i >= this.slots.size()) return false;
                 slot = (Slot) this.slots.get(k);
                 itemstack1 = slot.getItem();
                 if (!itemstack1.isEmpty() && itemstack1.getItem() == itemstack.getItem() && (!itemstack.usesData() || itemstack.getData() == itemstack1.getData()) && ItemStack.equals(itemstack, itemstack1)) {
@@ -534,6 +546,7 @@ public abstract class Container {
                     break;
                 }
 
+                if (i < 0 || i >= this.slots.size()) return false;
                 slot = (Slot) this.slots.get(k);
                 itemstack1 = slot.getItem();
                 if (itemstack1.isEmpty() && slot.isAllowed(itemstack)) {
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryView.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryView.java
index dadfce6e6..49d54bbfa 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryView.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventoryView.java
@@ -10,6 +10,7 @@ import org.bukkit.inventory.InventoryView;
 import org.bukkit.inventory.ItemStack;
 
 import net.minecraft.server.Container;
+import net.minecraft.server.Slot;
 
 public class CraftInventoryView extends InventoryView {
     private final Container container;
@@ -51,7 +52,9 @@ public class CraftInventoryView extends InventoryView {
     public void setItem(int slot, ItemStack item) {
         net.minecraft.server.ItemStack stack = CraftItemStack.asNMSCopy(item);
         if (slot != -999) {
-            container.getSlot(slot).set(stack);
+            Slot itemSlot = container.getSlot(slot);
+            if (itemSlot == null) return;
+            itemSlot.set(stack);
         } else {
             player.getHandle().drop(stack, false);
         }
@@ -62,7 +65,9 @@ public class CraftInventoryView extends InventoryView {
         if (slot == -999) {
             return null;
         }
-        return CraftItemStack.asCraftMirror(container.getSlot(slot).getItem());
+        Slot itemSlot = container.getSlot(slot);
+        if (itemSlot == null) return null;
+        return CraftItemStack.asCraftMirror(itemSlot.getItem());
     }
 
     public boolean isInTop(int rawSlot) {
-- 
2.25.1

